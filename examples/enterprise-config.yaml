# Enterprise Configuration Example
# Comprehensive configuration for enterprise environments with
# advanced security, compliance, and governance requirements

# Repository discovery and targeting
repositories:
  # Option 1: Explicit list
  explicit:
    - "enterprise-org/core-platform"
    - "enterprise-org/user-service"
    - "enterprise-org/payment-processor"
  
  # Option 2: Pattern-based discovery
  patterns:
    - "enterprise-org/*-service"
    - "enterprise-org/*-api"
  
  # Option 3: Topic-based discovery
  topics:
    - "copilot-enabled"
    - "production-service"

# Advanced MCP server configurations
mcp_servers:
  # GitHub MCP server with restricted access
  github:
    enabled: true
    config:
      token_source: "vault:github/enterprise-token"
      repositories: ["enterprise-org/*"]
      max_repositories: 100
      rate_limit: 5000
      
  # Playwright for browser automation
  playwright:
    enabled: true
    config:
      headless: true
      timeout: 45000
      screenshot_on_failure: true
      
  # Custom enterprise integrations
  jira:
    enabled: true
    config:
      endpoint: "{{ env.JIRA_URL }}"
      auth_header: "Bearer {{ vault.jira_token }}"
      project_key: "COPILOT"
      
  confluence:
    enabled: true
    config:
      endpoint: "{{ env.CONFLUENCE_URL }}"
      auth_header: "Bearer {{ vault.confluence_token }}"
      space_key: "DEV"

# Comprehensive secrets management
secrets:
  # Repository-level secrets
  repository_level:
    # Database connections
    DATABASE_URL: "{{ vault.database_url }}"
    REDIS_URL: "{{ vault.redis_url }}"
    
    # API keys and tokens
    EXTERNAL_API_KEY: "{{ vault.external_api_key }}"
    MONITORING_TOKEN: "{{ vault.monitoring_token }}"
    
    # Security certificates
    TLS_CERT: "{{ vault.tls_certificate }}"
    TLS_KEY: "{{ vault.tls_private_key }}"
  
  # Organization-level secrets
  organization_level:
    SHARED_ENCRYPTION_KEY: "{{ vault.shared_encryption_key }}"
    ENTERPRISE_LICENSE: "{{ vault.enterprise_license }}"
    AUDIT_WEBHOOK_SECRET: "{{ vault.audit_webhook_secret }}"

# Enterprise variables
variables:
  repository_level:
    BUILD_ENVIRONMENT: "production"
    LOG_LEVEL: "warn"
    COMPLIANCE_MODE: "strict"
    AUDIT_ENABLED: "true"
    
  organization_level:
    ENTERPRISE_DOMAIN: "{{ env.ENTERPRISE_DOMAIN }}"
    SECURITY_POLICY_VERSION: "2024.1"
    COMPLIANCE_FRAMEWORK: "SOX,SOC2,GDPR"

# Advanced security configuration
security:
  # IP allowlist for organization access
  ip_allowlist:
    enabled: true
    addresses:
      # Corporate network ranges
      - "10.0.0.0/8"
      - "172.16.0.0/12"
      - "192.168.1.0/24"
      # VPN endpoints
      - "203.0.113.0/24"
      - "198.51.100.0/24"
    inherit_github_app_ips: true
    
  # Advanced branch protection
  branch_protection:
    main:
      require_pr_reviews: true
      required_approving_review_count: 2
      dismiss_stale_reviews: true
      require_code_owner_reviews: true
      require_status_checks: true
      required_status_checks:
        - "ci/build"
        - "ci/test"
        - "security/sast"
        - "security/dependency-check"
        - "compliance/audit"
      enforce_admins: true
      allow_force_pushes: false
      allow_deletions: false
    
    develop:
      require_pr_reviews: true
      required_approving_review_count: 1
      require_status_checks: true
      required_status_checks:
        - "ci/build"
        - "ci/test"
  
  # Required status checks
  required_status_checks:
    enabled: true
    checks:
      - name: "ci/build"
        required: true
      - name: "ci/test"
        required: true
      - name: "security/sast"
        required: true
      - name: "security/dependency-check"
        required: true
      - name: "compliance/license-check"
        required: true
        
  # Security analysis configuration
  security_analysis:
    secret_scanning: true
    dependency_scanning: true
    code_scanning: true
    private_vulnerability_reporting: true

# Compliance and audit configuration
compliance:
  # Audit logging
  audit:
    enabled: true
    retention_days: 2555  # 7 years for SOX compliance
    webhook_url: "{{ env.AUDIT_WEBHOOK_URL }}"
    include_screenshots: true
    pii_scrubbing: true
    
  # Compliance reporting
  reporting:
    enabled: true
    schedule: "weekly"
    recipients:
      - "compliance@enterprise.com"
      - "security@enterprise.com"
    formats: ["pdf", "json"]
    
  # Data retention policies
  retention:
    logs: "7_years"
    screenshots: "1_year"
    configuration_history: "indefinite"

# Advanced execution options
options:
  # Execution control
  dry_run: false
  concurrency: 5
  batch_size: 10
  timeout: "30m"
  
  # Error handling
  continue_on_error: false
  retry_attempts: 3
  retry_delay: "exponential"
  
  # Logging and monitoring
  verbose: true
  log_level: "info"
  metrics_enabled: true
  
  # Security options
  require_mfa: true
  session_timeout: "30m"
  force_https: true
  
  # Notifications
  notifications:
    slack:
      webhook_url: "{{ env.SLACK_WEBHOOK_URL }}"
      channel: "#devops-alerts"
    email:
      recipients:
        - "devops@enterprise.com"
      smtp_server: "{{ env.SMTP_SERVER }}"

# Integration configurations
integrations:
  # HashiCorp Vault
  vault:
    url: "{{ env.VAULT_ADDR }}"
    auth_method: "kubernetes"
    role: "copilot-configurator"
    mount_path: "secret"
    
  # ServiceNow integration
  servicenow:
    instance_url: "{{ env.SERVICENOW_URL }}"
    api_token: "{{ vault.servicenow_token }}"
    change_request_template: "CONFIG_CHANGE"
    
  # Splunk logging
  splunk:
    endpoint: "{{ env.SPLUNK_HEC_URL }}"
    token: "{{ vault.splunk_token }}"
    index: "copilot_configurator"

# Custom plugins
plugins:
  # Enterprise security plugin
  enterprise_security:
    enabled: true
    config:
      policy_enforcement: "strict"
      custom_rules_path: "./enterprise-rules.yaml"
      
  # Compliance reporting plugin
  compliance_reporter:
    enabled: true
    config:
      frameworks: ["SOX", "SOC2", "GDPR", "HIPAA"]
      report_format: "detailed"
      
  # Change management plugin
  change_management:
    enabled: true
    config:
      require_change_request: true
      auto_approve_low_risk: false
      escalation_path: ["manager", "security", "compliance"]